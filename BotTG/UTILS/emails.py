import json
import smtplib
from email.message import EmailMessage
from datetime import datetime

def load_email_config():
    with open('email_config.json', 'r', encoding='utf-8') as f:
        return json.load(f)

def pick_smtp_config(email):
    domain = email.split('@')[-1].lower()
    configs = load_email_config()
    for conf in configs:
        if domain in conf['smtp_user']:
            return conf
    return configs[0]  # fallback

def send_confirmation_code(email, code):
    try:
        conf = pick_smtp_config(email)
        msg = EmailMessage()
        msg['Subject'] = '–ö–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏'
        msg['From'] = conf['smtp_user']
        msg['To'] = email
        msg.set_content(f'–í–∞—à –∫–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: {code}')
        with smtplib.SMTP_SSL(conf['smtp_server'], conf['smtp_port']) as server:
            server.login(conf['smtp_user'], conf['smtp_password'])
            server.send_message(msg)
        return True
    except Exception as e:
        print(f"[send_confirmation_code] –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ email: {e}")
        return False

def send_documents_to_admin(admin_email, user_email, specialty, files):
    try:
        conf = pick_smtp_config(admin_email)
        msg = EmailMessage()
        msg['Subject'] = f'–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –æ—Ç {user_email} –Ω–∞ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å {specialty}'
        msg['From'] = conf['smtp_user']
        msg['To'] = admin_email
        msg.set_content(f'–ü–æ—Å—Ç—É–ø–∏–ª–∞ –Ω–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –æ—Ç {user_email} –Ω–∞ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å {specialty}. –î–æ–∫—É–º–µ–Ω—Ç—ã –≤–æ –≤–ª–æ–∂–µ–Ω–∏–∏.')
        for file_path, file_name in files:
            with open(file_path, 'rb') as f:
                file_data = f.read()
                msg.add_attachment(file_data, maintype='application', subtype='octet-stream', filename=file_name)
        with smtplib.SMTP_SSL(conf['smtp_server'], conf['smtp_port']) as server:
            server.login(conf['smtp_user'], conf['smtp_password'])
            server.send_message(msg)
        return True
    except Exception as e:
        print(f"[send_documents_to_admin] –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ email: {e}")
        return False

def send_documents_to_admin_with_user_data(admin_email, user_data, specialty_title, specialty_code, files):
    try:
        conf = pick_smtp_config(admin_email)
        msg = EmailMessage()
        msg['Subject'] = f'–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏–µ - {specialty_title}'
        msg['From'] = conf['smtp_user']
        msg['To'] = admin_email
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–ª–æ –ø–∏—Å—å–º–∞ —Å –¥–∞–Ω–Ω—ã–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        body = f"""
–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏–µ

–î–ê–ù–ù–´–ï –ê–ë–ò–¢–£–†–ò–ï–ù–¢–ê:
üë§ –§–ò–û: {user_data['name']}
üìß Email: {user_data['email']}
üéÇ –í–æ–∑—Ä–∞—Å—Ç: {user_data['age']} –ª–µ—Ç
‚ôÇÔ∏è‚ôÄÔ∏è –ü–æ–ª: {user_data['gender']}
üÜî Telegram ID: {user_data['telegram_id']}
üë§ Username: @{user_data['username']}

–°–ü–ï–¶–ò–ê–õ–¨–ù–û–°–¢–¨:
üéì –ù–∞–∑–≤–∞–Ω–∏–µ: {specialty_title}
üìã –ö–æ–¥: {specialty_code}

–î–æ–∫—É–º–µ–Ω—Ç—ã –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω—ã –∫ –ø–∏—Å—å–º—É.

–î–ª—è –æ—Ç–≤–µ—Ç–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ–æ—Ä–º–∞—Ç:
1. –°—Ç–∞—Ç—É—Å –∑–∞—è–≤–∫–∏: –æ–¥–æ–±—Ä–µ–Ω–æ/–æ—Ç–∫–ª–æ–Ω–µ–Ω–æ
2. –ü–æ—è—Å–Ω–µ–Ω–∏–µ: [–≤–∞—à –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π]
        """
        
        msg.set_content(body)
        
        # –ü—Ä–∏–∫—Ä–µ–ø–ª—è–µ–º —Ñ–∞–π–ª—ã
        for file_path, file_name in files:
            try:
                with open(file_path, 'rb') as f:
                    file_data = f.read()
                    msg.add_attachment(file_data, maintype='application', subtype='octet-stream', filename=file_name)
            except Exception as e:
                print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–∏—è —Ñ–∞–π–ª–∞ {file_name}: {e}")
        
        with smtplib.SMTP_SSL(conf['smtp_server'], conf['smtp_port']) as server:
            server.login(conf['smtp_user'], conf['smtp_password'])
            server.send_message(msg)
        return True
    except Exception as e:
        print(f"[send_documents_to_admin_with_user_data] –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ email: {e}")
        return False

def send_admin_response_to_user(user_email, application_id, admin_response):
    try:
        conf = pick_smtp_config(user_email)
        msg = EmailMessage()
        msg['Subject'] = f'–û—Ç–≤–µ—Ç –ø–æ –∑–∞—è–≤–∫–µ #{application_id}'
        msg['From'] = conf['smtp_user']
        msg['To'] = user_email
        
        body = f"""
–û—Ç–≤–µ—Ç –ø–æ –≤–∞—à–µ–π –∑–∞—è–≤–∫–µ –Ω–∞ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏–µ

üìã ID –∑–∞—è–≤–∫–∏: {application_id}
üìÖ –î–∞—Ç–∞ –æ—Ç–≤–µ—Ç–∞: {datetime.now().strftime('%d.%m.%Y %H:%M')}

{admin_response}

–° —É–≤–∞–∂–µ–Ω–∏–µ–º,
–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è —É—á–µ–±–Ω–æ–≥–æ –∑–∞–≤–µ–¥–µ–Ω–∏—è
        """
        
        msg.set_content(body)
        
        with smtplib.SMTP_SSL(conf['smtp_server'], conf['smtp_port']) as server:
            server.login(conf['smtp_user'], conf['smtp_password'])
            server.send_message(msg)
        return True
    except Exception as e:
        print(f"[send_admin_response_to_user] –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ email: {e}")
        return False